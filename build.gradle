plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Use the latest version of the Shadow plugin
}

group = 'org.JScriptor'
version = '2.01'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.portswigger.burp.extensions:montoya-api:2023.12.1'
    implementation 'org.graalvm.js:js:22.3.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fifesoft:rsyntaxtextarea:3.3.4'
    implementation 'com.caoccao.javet:javet:3.0.2'

    if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
        implementation 'com.caoccao.javet:javet-macos:3.0.2'
    } else if (org.gradle.internal.os.OperatingSystem.current().isLinux() &&
            (System.properties['os.arch'] == 'aarch64' || System.properties['os.arch'] == 'arm64')) {
        implementation 'com.caoccao.javet:javet-linux-arm64:3.0.2'
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.findAll { it.isDirectory() || it.name.endsWith('.jar') }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Shadow Jar configuration
shadowJar {
    archiveClassifier.set('')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    configurations = [project.configurations.runtimeClasspath]
    mergeServiceFiles()
}
